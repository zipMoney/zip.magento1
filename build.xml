<?xml version="1.0" encoding="UTF-8"?>
<project name="QA" default="install" basedir=".">
  <property file="./build.properties" />

  <property name="magento.base_dir" value="${project.basedir}/magento" />
  <property name="extension.base_dir" value="${project.basedir}" />
  <property name="global.vendor.dir" value="~/.composer/vendor/"/>
  <property name="vendor.dir" value="${project.basedir}/vendor/"/>

  <property name="bin.composer" value="composer --working-dir=${phing.dir}" />
  <property name="bin.phpunit"  value="${global.vendor.dir}bin/phpunit" />
  
  <property name="bin.mage-ci"  value="${vendor.dir}/bin/mage-ci" />
  <property name="bin.magerun"  value="${global.vendor.dir}/bin/n98-magerun --root-dir=${magento.base_dir}" />  

  <!-- A database name that's guaranteed to be safe -->
  <property name="db.name.safe" refid="db.name">
      <filterchain>
          <replaceregexp>
              <regexp pattern="[^0-9a-zA-Z$_]" replace="_" ignoreCase="true"/>
          </replaceregexp>
      </filterchain>
  </property>

  <target name="install" depends="install-magento,install-extension" description="Install Magento and extension" />
  <target name="lint" depends="lint-php,lint-xml" description="Run available linters" />
  <target name="test" depends="test-phpunit" description="Run available tests" />

  <target name="validate-build-properties" description="Ensure all require properties are defined">
    <if>
      <not><isset property="magento.version"/></not>
      <then><fail>magento.version is not specified</fail></then>
    </if>
    <if>
      <not><isset property="magento.base_url"/></not>
      <then><fail>magento.base_url is not specified</fail></then>
    </if>
    <if>
      <not><isset property="db.user"/></not>
      <then><fail>db.user is not specified</fail></then>
    </if>
    <if>
      <not><isset property="db.name"/></not>
      <then><fail>db.name is not specified</fail></then>
    </if>
    <if>
      <not><isset property="db.pass"/></not>
      <then><fail>db.pass is not specified</fail></then>
    </if>
  </target>

  <target name="install-deps" description="Install all required dependencies">
        <exec command="${bin.composer} install" passthru="true" checkreturn="true" />
  </target>

  <target name="install-magento" depends="validate-build-properties,install-deps" description="Install Magento in the ${magento.base_dir} directory">
    <if>
      <not><available type="dir" file="${magento.base_dir}" /></not>
      <then>
        <exec command="${bin.mage-ci} install ${magento.base_dir} ${magento.version} ${db.name.safe} -c -t -u ${db.user} -p ${db.pass} -b ${magento.base_url}" passthru="true" checkreturn="true" />            <phingcall target="magento-cache-disable" />
        <phingcall target="magento-cache-refresh" />
        <phingcall target="magento-index-reindexall" />
        <phingcall target="magento-cache-enable" />
      </then>
      <else>
        <echo message="Magento is already installed in ${magento.base_dir}" />
      </else>
    </if>
  </target>

  <target name="install-extension" depends="install-magento,install-deps,magento-cache-refresh">
    <exec command="${bin.mage-ci} install-module ${magento.base_dir} ${extension.base_dir}" passthru="true" checkreturn="true" />

    <!-- Run any setup scripts that may have been introduced -->
    <exec command="${bin.magerun} sys:setup:run" passthru="true" checkreturn="true" />

    <phingcall target="magento-index-reindexall" />
    <phingcall target="magento-cache-refresh" />
  </target>

  <target name="install-extension-ecomdev-phpunit">
    <exec command="${bin.mage-ci} install-module ${magento.base_dir} https://github.com/EcomDev/EcomDev_PHPUnit.git" passthru="true" checkreturn="true" />
  </target>

  <target name="test-phpunit" depends="install,install-deps,install-extension-ecomdev-phpunit">
    <exec command="${bin.mage-ci} phpunit ${magento.base_dir}" passthru="true" checkreturn="true" />

    <phingcall target="magento-index-reindexall" />
    <phingcall target="magento-cache-refresh" />
  </target>

  <target name="lint-php">
    <phplint>
      <fileset dir="${extension.base_dir}">
        <include name="**/*.php"/>
        <include name="**/*.phtml"/>
      </fileset>
    </phplint>
  </target>

  <target name="lint-xml">
    <xmllint haltonfailure="1">
      <fileset dir="${extension.base_dir}">
        <include name="**/*.xml"/>
      </fileset>
    </xmllint>
  </target>

  <target name="magento-cache-refresh">
    <exec command="${bin.magerun} cache:clean" passthru="true" checkreturn="true" />
  </target>

  <target name="magento-cache-disable">
    <exec command="${bin.magerun} cache:disable" passthru="true" checkreturn="true" />
  </target>

  <target name="magento-cache-enable">
    <exec command="${bin.magerun} cache:enable" passthru="true" checkreturn="true" />
  </target>

  <target name="magento-index-reindexall" depends="magento-cache-refresh">
    <exec command="${bin.magerun} index:reindex:all" passthru="true" checkreturn="true" />
  </target>

  <target name="clean" depends="install-deps" description="Remove composer install dependencies, Magento directory and Magento database">
    <exec command="${bin.mage-ci} uninstall ${magento.base_dir} ${db.name.safe} -u ${db.user} -p ${db.pass}" passthru="true" checkreturn="true" />  
    <delete dir="${magento.base_dir}" />
    <delete dir="${phing.dir}/vendor" />
  </target>

  <target name="create_package" description="Package module into a magento connect package">
    <exec dir="${extension.base_dir}" command="${bin.composer} install --no-dev" passthru="true" checkreturn="true" />
    <exec dir="${magento.base_dir}"   command="mkdir -p var/connect" passthru="true" checkreturn="true" />
    <exec dir="${extension.base_dir}" command="sed -ri 's/\{version\}/${env.branch}/gm' zipmoney.package.yaml" passthru="true" checkreturn="true" />
    <exec dir="${extension.base_dir}" command="${bin.magerun} extension:create -f zipmoney.package.yaml" passthru="true" checkreturn="true" />
  </target>

  <target name="publish_to_s3">
      <exec dir="${magento.base_dir}/var/connect" command="aws s3 cp Zipmoney_ZipmoneyPayment-${env.branch}.tgz s3://zm-software-assets/Plugins-Libraries/Plugins/Magento1/Zipmoney_ZipmoneyPayment-${env.branch}.tgz  --grants read=uri=http://acs.amazonaws.com/groups/global/AllUsers" passthru="true" checkreturn="true" />
  </target>

  <target name="package" description="Create">
    <propertyregex property="tagname" subject="${env.branch}"  pattern="^(\*|\d+(\.\d+){0,2}(\.\*)?)$"   match="$1" casesensitive="false" defaultvalue="false"/>
    <echo msg="${tagname}" />
    <if>
      <ispropertytrue property="tagname" />
      <then>
          <echo msg="Is a tag  ${tagname}" />      
          <phingcall target="create_package"/>
          <phingcall target="publish_to_s3"/>
      </then>
      <else>
          <echo msg="Is not a tag, so not tagging" />
      </else>
    </if>
  </target>
</project>

